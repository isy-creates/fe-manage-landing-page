@import url("https://fonts.googleapis.com/css2?family=Be+Vietnam:wght@400;500;700&display=swap");
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

body {
  margin: 0;
}

main {
  display: block;
}

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

a {
  background-color: transparent;
  text-decoration: none;
  color: inherit;
}

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

h1, h2, h3, h4, h5, h6 {
  margin: 0;
  padding: 0;
  font-size: inherit;
  font-weight: inherit;
}

b,
strong {
  font-weight: bolder;
}

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

code {
  background-color: rgba(0, 0, 0, 0.2);
  padding: 0 4px;
  border-radius: 3px;
}

ul, ol, dd {
  padding: 0;
}

kbd {
  background-color: #eee;
  border-radius: 3px;
  border: 1px solid #b4b4b4;
  -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), 0 2px 0 0 rgba(255, 255, 255, 0.7) inset;
          box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), 0 2px 0 0 rgba(255, 255, 255, 0.7) inset;
  color: inherit;
  display: inline-block;
  font-weight: 700;
  padding: 2px 4px;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

img {
  border-style: none;
  vertical-align: middle;
  width: 100%;
}

figure,
p,
ul, ol, dd {
  margin: 0;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}

button {
  background-color: none;
  color: inherit;
  cursor: pointer;
}

button,
input {
  /* 1 */
  overflow: visible;
}

button,
select {
  /* 1 */
  text-transform: none;
}

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

fieldset {
  padding: 0;
  margin: 0;
  border-width: 0;
}

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

progress {
  vertical-align: baseline;
}

textarea {
  overflow: auto;
}

label {
  display: block;
}

[type=checkbox],
[type=radio] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

[type=submit],
[type=button],
[type=reset] {
  cursor: pointer;
}

*:disabled {
  cursor: not-allowed;
}

button:disabled {
  color: rgba(16, 16, 16, 0.3);
}

details {
  display: block;
}

summary {
  display: list-item;
}

template {
  display: none;
}

[hidden] {
  display: none;
}

th {
  text-align: left;
}

body {
  overflow-x: hidden;
}

.main-content {
  min-width: 0;
}

body {
  font-family: "Be Vietnam", sans-serif;
  font-size: 0.875rem;
  line-height: 2;
}
@media (min-width: 1024px) {
  body {
    font-size: 1rem;
    line-height: 1.6;
  }
}

h1, h2, h3, h4, h5, h5, p {
  text-align: center;
}
@media (min-width: 1024px) {
  h1, h2, h3, h4, h5, h5, p {
    text-align: left;
  }
}

h1, h2, h3, h4, h5, h5 {
  font-weight: 700;
  color: #242d52;
}

h1 {
  font-size: clamp(2.5rem, 1.8906rem + 2.7083vw, 3.3125rem);
  letter-spacing: -1px;
  line-height: 1.2;
  margin-bottom: 0.5rem;
}
@media (min-width: 1024px) {
  h1 {
    letter-spacing: 0;
    margin-bottom: 2rem;
  }
}

h2 {
  font-size: clamp(1.8125rem, 1.3906rem + 1.8750vw, 2.375rem);
  line-height: 1.55;
  margin-bottom: 0.75rem;
}
@media (min-width: 1024px) {
  h2 {
    line-height: 1.15;
    letter-spacing: 0.3px;
    margin-bottom: 1.9375rem;
  }
}

h3 {
  font-size: 2.625rem;
}

.text {
  max-width: 20.9375rem;
  margin: 0 auto;
  color: #9095a7;
}
@media (min-width: 1280px) {
  .text {
    margin-left: 0;
  }
}

.intro {
  font-size: 1rem;
  line-height: 1.75;
  margin-bottom: 1.8125rem;
}
@media (min-width: 1024px) {
  .intro {
    line-height: 1.65;
    margin-bottom: 2.5rem;
  }
}

.has-grid {
  display: grid;
  gap: 19px;
}
@media (min-width: 1024px) {
  .has-grid {
    grid-template-columns: minmax(auto, 436px) minmax(auto, 540px);
    gap: 7.3125rem;
  }
}

.section {
  padding: 2.9375rem 0;
}
@media (min-width: 1024px) {
  .section {
    padding: 5.6875rem 0;
  }
}

.with-large-container {
  margin: 0 auto;
  width: 100%;
}

.with-large-container {
  max-width: 27.3125rem;
  padding-left: 1rem;
  padding-right: 1rem;
}
@media (min-width: 1024px) {
  .with-large-container {
    max-width: 69.4375rem;
  }
}

.template-with-one-column {
  display: grid;
}

.template-with-one-column {
  grid-gap: 2.8125rem;
  grid-template-rows: [nav] auto [main] auto [footer] auto;
}
@media (min-width: 1280px) {
  .template-with-one-column {
    grid-gap: 7.3125rem;
  }
}

.header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.has-background-color {
  background-color: rgba(249, 190, 214, 0.5);
}

.hamburger-menu {
  width: 1rem;
  z-index: 500;
}
.hamburger-menu:hover {
  cursor: pointer;
}
.hamburger-menu > span {
  display: block;
  height: 4px;
  background-color: #242d52;
  width: 25px;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}
.hamburger-menu > span:not(:last-of-type) {
  margin-bottom: 3px;
}
.hamburger-menu.is--open span:nth-child(1) {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
  -webkit-transform-origin: top left;
          transform-origin: top left;
  width: 27px;
}
.hamburger-menu.is--open span:nth-child(2) {
  opacity: 0;
  width: 0;
}
.hamburger-menu.is--open span:nth-child(3) {
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
  -webkit-transform-origin: bottom left;
          transform-origin: bottom left;
  width: 27px;
}
@media (min-width: 1280px) {
  .hamburger-menu {
    display: none;
  }
}

.navigation {
  display: none;
}
@media (min-width: 1280px) {
  .navigation {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }
}
.navigation__link {
  font-weight: 500;
  -webkit-transition: color 0.3s ease-in-out;
  transition: color 0.3s ease-in-out;
}
.navigation__link:not(:last-of-type) {
  margin-right: 2rem;
}
.navigation__link:hover {
  color: #9095a7;
}
.navigation__button {
  display: none;
}
@media (min-width: 1280px) {
  .navigation__button {
    display: block;
  }
}

.button {
  background-image: none;
  border-radius: 2.75rem;
  border: none;
  font: 400 0.8125rem "Be Vietnam", sans-serif;
  line-height: 1.2;
  width: 8.5rem;
  height: 2.75rem;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}
.button--primary {
  background-color: #f25f3a;
  color: #ffefeb;
  border: 1px solid #D96A4E;
  -webkit-box-shadow: 0 8px 15px 0 rgba(242, 95, 58, 0.2);
          box-shadow: 0 8px 15px 0 rgba(242, 95, 58, 0.2);
}
.button--primary:hover {
  background-color: #FC8E77;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  -webkit-box-shadow: 0 8px 15px 0 rgba(255, 239, 235, 0.2);
          box-shadow: 0 8px 15px 0 rgba(255, 239, 235, 0.2);
}
.button--secondary {
  background-color: #fff;
  color: #f25f3a;
}
.button--secondary:hover {
  color: #ffefeb;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

.card {
  display: grid;
  grid-template-rows: repeat(2, 1fr) 3fr;
  justify-items: center;
  margin-bottom: 1.5625rem;
  width: 100%;
}
@media (min-width: 1024px) {
  .card {
    margin: 0 0 1.5625rem;
    max-width: 38%;
  }
}
.card:not(:last-of-type) {
  margin-right: 1rem;
}
.card__image {
  grid-row: 1/span 2;
  grid-column: 1;
  max-height: 4.5625rem;
  width: auto;
  z-index: 1;
}
.card__quoteblock {
  grid-row: 2/span 2;
  grid-column: 1;
  padding: 3.0625rem 1.25rem 2.0625rem;
  background-color: #fafafa;
  color: #242d52;
}
.card__name {
  font-weight: 700;
  font-size: 1rem;
  margin-bottom: 1rem;
  text-align: center;
}
.card__quote {
  color: #9095a7;
  text-align: center;
}

.hero {
  position: relative;
}
.hero__illustration {
  width: 100%;
  margin: 0 auto;
}
@media (min-width: 1024px) {
  .hero__illustration {
    max-height: 31.25rem;
    grid-column: 2;
    grid-row: 1;
  }
}
.hero__text {
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center;
}
.hero__button {
  display: block;
  margin: 0 auto;
}
@media (min-width: 1024px) {
  .hero__button {
    margin-left: 0;
  }
}
.hero.section {
  padding-top: 0;
}

.list {
  list-style: none;
  counter-reset: item;
}
.list__item {
  counter-increment: item;
}
.list__item:not(:last-of-type) {
  margin-bottom: 2.75rem;
}
.list__headline {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  justify-items: center;
  margin-bottom: 0.75rem;
  text-align: left;
  font-weight: 700;
  letter-spacing: -0.3px;
  position: relative;
  font-size: 1rem;
}
.list__headline:before {
  content: counter(item, decimal-leading-zero);
  font-size: 1rem;
  font-weight: 700;
  color: #fff;
  background-color: #f25f3a;
  padding: 0 1.4375rem 0.25rem;
  border-radius: 23px;
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center;
}
.list__headline span {
  padding-left: 14px;
  color: #242d52;
}
.list__headline::after {
  content: "";
  background-color: #ffefeb;
  position: absolute;
  width: calc(100% + 1rem);
  height: 100%;
  z-index: -1;
  left: 23px;
  top: 0;
}
@media (min-width: 1024px) {
  .list__headline::after {
    content: none;
  }
}
.list__text {
  color: #9095a7;
}
@media (min-width: 1024px) {
  .list__text {
    padding-left: 4.8125rem;
    max-width: 31.375rem;
  }
}

.pill {
  position: relative;
}
.pill:after {
  content: "";
  position: absolute;
  z-index: -1;
  background-image: url("../images/bg-tablet-pattern.svg");
  background-repeat: no-repeat;
  background-size: contain;
}
.pill__top::after {
  top: 0;
  right: 0;
  height: 100%;
  width: 100%;
  -webkit-transform: translate(18%, -24%);
          transform: translate(18%, -24%);
}
@media (min-width: 1024px) {
  .pill__top::after {
    height: 50.875rem;
    -webkit-transform: translate(55%, -50%);
            transform: translate(55%, -50%);
  }
}
.pill__bottom::after {
  top: -100%;
  height: 120%;
  width: 120%;
  -webkit-transform: translate(63%, -13%);
          transform: translate(63%, -13%);
}
@media (min-width: 1024px) {
  .pill__bottom::after {
    height: 180%;
    width: 180%;
    -webkit-transform: rotate(180deg) translate(83%, -40%);
            transform: rotate(180deg) translate(83%, -40%);
    top: 0;
  }
}

.dot-navigation {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
}
@media (min-width: 1024px) {
  .dot-navigation {
    display: none;
  }
}
.dot-navigation .dot {
  height: 9px;
  width: 9px;
  border: 2px solid #f25f3a;
  border-radius: 50%;
}
.dot-navigation .dot.active {
  background-color: #f25f3a;
}
.dot-navigation .dot:not(:last-of-type) {
  margin-right: 3px;
}

.newsletter {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 3.4375rem;
}
@media (min-width: 1024px) {
  .newsletter {
    margin-bottom: 2.6875rem;
  }
}
.newsletter__input {
  height: 2.75rem;
  border-radius: 2.75rem;
  width: 100%;
  padding: 0 1rem;
}
.newsletter__fieldset {
  -webkit-box-flex: 1;
  -webkit-flex: 1 0 100%;
      -ms-flex: 1 0 100%;
          flex: 1 0 100%;
  margin-right: 0.5rem;
}
@media (min-width: 1024px) {
  .newsletter__fieldset {
    max-width: 12.6875rem;
  }
}
.newsletter__button {
  width: auto;
  padding: 0 1.5rem;
}
.newsletter__error-message {
  display: none;
  font-size: 0.75rem;
  color: #7F3641;
  padding-left: 1rem;
}
.newsletter.error .newsletter__input {
  border: 2px solid #7F3641;
}
.newsletter.error .newsletter__error-message {
  display: block;
}

.screen-reader-only {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.header {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: baseline;
  -webkit-align-items: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  margin-top: 2.5rem;
  padding: 0 1.5rem;
}
@media (min-width: 1024px) {
  .header {
    margin-top: 4.5rem;
    padding: 0 1.5rem 0 0;
  }
}
.header__logo {
  width: 100%;
  max-width: 6.8125rem;
}
@media (min-width: 1024px) {
  .header__logo {
    max-width: 9.125rem;
    -webkit-align-self: flex-end;
        -ms-flex-item-align: end;
            align-self: flex-end;
  }
}

.cta-space {
  background: #f25f3a url(../images/bg-simplify-section-mobile.svg) no-repeat;
}
@media (min-width: 1024px) {
  .cta-space {
    background-image: url(../images/bg-simplify-section-desktop.svg);
    background-position: center;
    padding: 0 1rem;
  }
}
.cta-space__container {
  padding: 5.5625rem 0;
}
.cta-space__headline {
  color: #fff;
  font-size: 2.375rem;
  line-height: 1.3;
}
.cta-space__button {
  display: block;
  margin: 1.8125rem auto 0;
}
@media (min-width: 1024px) {
  .cta-space__button {
    margin-right: 0;
  }
}

.footer {
  background-color: #1d1e25;
  color: #fff;
}
.footer__container {
  display: grid;
  padding: 3.1875rem 1rem 1.5625rem;
}
@media (min-width: 1024px) {
  .footer__container {
    padding: 3.5625rem 1rem;
  }
}
@media (min-width: 1024px) {
  .footer {
    grid-template-columns: minmax(auto, 165px) minmax(auto, 388px) minmax(auto, 318px);
  }
  .footer__newsletter {
    grid-column: 3;
    grid-row: 1;
  }
  .footer__links {
    grid-column: 2;
    grid-row: 1;
  }
  .footer__social {
    grid-column: 1;
    grid-row: 2;
  }
  .footer__logo {
    grid-column: 1;
    grid-row: 1;
  }
  .footer__copyright {
    grid-column: 3;
    grid-row: 2;
  }
}

.difference__intro {
  margin-bottom: 3.5rem;
}

.testimonial {
  padding: 2.9375rem 1rem;
}
@media (min-width: 1024px) {
  .testimonial {
    padding-right: 0;
  }
}
.testimonial h3 {
  margin-bottom: 4.1875rem;
  text-align: center;
}
.testimonial__list {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow-x: auto;
  cursor: -webkit-grab;
  cursor: grab;
  -webkit-overflow-scrolling: touch;
}
.testimonial__list::-webkit-scrollbar {
  display: none;
}
.testimonial__list > * {
  -webkit-flex-shrink: 0;
      -ms-flex-negative: 0;
          flex-shrink: 0;
}
.testimonial__button {
  margin: 2.875rem auto 0;
  display: block;
}
@media (min-width: 1024px) {
  .testimonial__button {
    margin-top: 1.25rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
