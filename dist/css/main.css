@import url("https://fonts.googleapis.com/css2?family=Be+Vietnam:wght@400;500;700&display=swap");
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

body {
  margin: 0;
}

main {
  display: block;
}

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

a {
  background-color: transparent;
  text-decoration: none;
  color: inherit;
}

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

h1, h2, h3, h4, h5, h6 {
  margin: 0;
  padding: 0;
  font-size: inherit;
  font-weight: inherit;
}

b,
strong {
  font-weight: bolder;
}

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

code {
  background-color: rgba(0, 0, 0, 0.2);
  padding: 0 4px;
  border-radius: 3px;
}

ul, ol, dd {
  padding: 0;
}

kbd {
  background-color: #eee;
  border-radius: 3px;
  border: 1px solid #b4b4b4;
  -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), 0 2px 0 0 rgba(255, 255, 255, 0.7) inset;
          box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), 0 2px 0 0 rgba(255, 255, 255, 0.7) inset;
  color: inherit;
  display: inline-block;
  font-weight: 700;
  padding: 2px 4px;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

img {
  border-style: none;
  vertical-align: middle;
  width: 100%;
}

figure,
p,
ul, ol, dd {
  margin: 0;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}

button {
  background-color: none;
  color: inherit;
  cursor: pointer;
}

button,
input {
  /* 1 */
  overflow: visible;
}

button,
select {
  /* 1 */
  text-transform: none;
}

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

fieldset {
  padding: 0;
  margin: 0;
  border-width: 0;
}

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

progress {
  vertical-align: baseline;
}

textarea {
  overflow: auto;
}

label {
  display: block;
}

[type=checkbox],
[type=radio] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

[type=submit],
[type=button],
[type=reset] {
  cursor: pointer;
}

*:disabled {
  cursor: not-allowed;
}

button:disabled {
  color: rgba(16, 16, 16, 0.3);
}

details {
  display: block;
}

summary {
  display: list-item;
}

template {
  display: none;
}

[hidden] {
  display: none;
}

th {
  text-align: left;
}

body {
  overflow-x: hidden;
}

.pill {
  position: relative;
}
.pill:after {
  content: "";
  position: absolute;
  z-index: -1;
  top: 0;
  right: 0;
  background-image: url("../images/bg-tablet-pattern.svg");
  background-repeat: no-repeat;
  background-size: contain;
  height: 100%;
  width: 100%;
  -webkit-transform: translate(18%, -24%);
          transform: translate(18%, -24%);
}
@media (min-width: 1024px) {
  .pill:after {
    height: 50.875rem;
    -webkit-transform: translate(55%, -50%);
            transform: translate(55%, -50%);
  }
}

body {
  font-family: "Be Vietnam", sans-serif;
  font-size: 0.875rem;
  line-height: 2;
}
@media (min-width: 1024px) {
  body {
    font-size: 1rem;
    line-height: 1.6;
  }
}

h1, h2, h3, h4, h5, h5, p {
  text-align: center;
}
@media (min-width: 1024px) {
  h1, h2, h3, h4, h5, h5, p {
    text-align: left;
  }
}

h1, h2, h3, h4, h5, h5 {
  font-weight: 700;
  color: #242d52;
}

h1 {
  font-size: clamp(2.5rem, 1.8906rem + 2.7083vw, 3.3125rem);
  letter-spacing: -1px;
  line-height: 1.2;
  margin-bottom: 0.5rem;
}
@media (min-width: 1024px) {
  h1 {
    letter-spacing: 0;
    margin-bottom: 2rem;
  }
}

h2 {
  font-size: clamp(1.8125rem, 1.3906rem + 1.8750vw, 2.375rem);
  line-height: 1.55;
  margin-bottom: 0.75rem;
}
@media (min-width: 1024px) {
  h2 {
    line-height: 1.15;
    letter-spacing: 0.3px;
    margin-bottom: 1.9375rem;
  }
}

h3 {
  font-size: 2.625rem;
}

p {
  max-width: 20.8125rem;
  margin: 0 auto;
}
@media (min-width: 1280px) {
  p {
    margin-left: 0;
  }
}

.intro {
  font-size: 1rem;
  line-height: 1.75;
  margin-bottom: 1.8125rem;
}
@media (min-width: 1024px) {
  .intro {
    line-height: 1.65;
    margin-bottom: 2.5rem;
  }
}

.has-grid {
  display: grid;
  gap: 19px;
}
@media (min-width: 1024px) {
  .has-grid {
    grid-template-columns: minmax(auto, 436px) minmax(auto, 540px);
    gap: 7.3125rem;
  }
}

.section {
  padding: 1.1875rem 0;
}
@media (min-width: 1024px) {
  .section {
    padding: 5.6875rem 0;
  }
}

.with-large-container {
  margin: 0 auto;
  width: 100%;
}

.with-large-container {
  max-width: 27.3125rem;
  padding: 0 1rem;
}
@media (min-width: 1024px) {
  .with-large-container {
    max-width: 69.4375rem;
    padding: 0;
  }
}

.template-with-one-column {
  display: grid;
}

.template-with-one-column {
  grid-gap: 2.8125rem;
  grid-template-rows: [nav] auto [main] auto [footer] auto;
}
@media (min-width: 1280px) {
  .template-with-one-column {
    grid-gap: 7.3125rem;
  }
}

.header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.has-background-color {
  background-color: rgba(249, 190, 214, 0.5);
}

.hamburger-menu {
  width: 1rem;
  z-index: 500;
}
.hamburger-menu:hover {
  cursor: pointer;
}
.hamburger-menu > span {
  display: block;
  height: 4px;
  background-color: #242d52;
  width: 25px;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}
.hamburger-menu > span:not(:last-of-type) {
  margin-bottom: 3px;
}
.hamburger-menu.is--open span:nth-child(1) {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
  -webkit-transform-origin: top left;
          transform-origin: top left;
  width: 27px;
}
.hamburger-menu.is--open span:nth-child(2) {
  opacity: 0;
  width: 0;
}
.hamburger-menu.is--open span:nth-child(3) {
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
  -webkit-transform-origin: bottom left;
          transform-origin: bottom left;
  width: 27px;
}
@media (min-width: 1280px) {
  .hamburger-menu {
    display: none;
  }
}

.navigation {
  display: none;
}
@media (min-width: 1280px) {
  .navigation {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }
}
.navigation__link {
  font-weight: 500;
  -webkit-transition: color 0.3s ease-in-out;
  transition: color 0.3s ease-in-out;
}
.navigation__link:not(:last-of-type) {
  margin-right: 2rem;
}
.navigation__link:hover {
  color: #9095a7;
}
.navigation__button {
  display: none;
}
@media (min-width: 1280px) {
  .navigation__button {
    display: block;
  }
}

.button {
  background-image: none;
  border-radius: 2.75rem;
  border: none;
  font: 400 0.8125rem "Be Vietnam", sans-serif;
  line-height: 1.2;
  width: 8.5rem;
  height: 2.75rem;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}
.button--primary {
  background-color: #f25f3a;
  color: #ffefeb;
  border: 1px solid #D96A4E;
  -webkit-box-shadow: 0 8px 15px 0 rgba(242, 95, 58, 0.2);
          box-shadow: 0 8px 15px 0 rgba(242, 95, 58, 0.2);
}
.button--primary:hover {
  background-color: #FC8E77;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  -webkit-box-shadow: 0 8px 15px 0 rgba(255, 239, 235, 0.2);
          box-shadow: 0 8px 15px 0 rgba(255, 239, 235, 0.2);
}
.button--secondary {
  background-color: #fff;
  color: #f25f3a;
}
.button--secondary:hover {
  color: #ffefeb;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

.card {
  background-color: #ffffff;
  border-radius: 0.171875rem;
  -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
          box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
  border: 1px solid #ffffff;
  padding: 2rem;
}
.card--height {
  height: 41.125rem;
}

.hero {
  position: relative;
}
.hero__illustration {
  width: 100%;
  margin: 0 auto;
}
@media (min-width: 1024px) {
  .hero__illustration {
    max-height: 31.25rem;
    grid-column: 2;
    grid-row: 1;
  }
}
.hero__text {
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center;
}
.hero__button {
  display: block;
  margin: 0 auto;
}
@media (min-width: 1024px) {
  .hero__button {
    margin-left: 0;
  }
}
.hero.section {
  padding-top: 0;
}

.header {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  margin-top: 2.5rem;
  padding: 0 1.5rem;
}
@media (min-width: 1024px) {
  .header {
    margin-top: 4.5rem;
    padding: 0 1.5rem 0 0;
  }
}
.header__logo {
  width: 100%;
  max-width: 6.8125rem;
}
@media (min-width: 1024px) {
  .header__logo {
    max-width: 9.125rem;
    -webkit-align-self: flex-end;
        -ms-flex-item-align: end;
            align-self: flex-end;
  }
}

.footer {
  display: grid;
}
@media (min-width: 1024px) {
  .footer {
    grid-template-columns: minmax(auto, 165px) minmax(auto, 388px) minmax(auto, 318px);
  }
  .footer__newsletter {
    grid-column: 3;
    grid-row: 1;
  }
  .footer__links {
    grid-column: 2;
    grid-row: 1;
  }
  .footer__social {
    grid-column: 1;
    grid-row: 2;
  }
  .footer__logo {
    grid-column: 1;
    grid-row: 1;
  }
  .footer__copyright {
    grid-column: 3;
    grid-row: 2;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFic3RyYWN0cy9fdmFyaWFibGVzLnNjc3MiLCJnbG9iYWwvX3Jlc2V0LnNjc3MiLCJtYWluLmNzcyIsImdsb2JhbC9fYmFzZS5zY3NzIiwiZ3JpZC9fYnJlYWtwb2ludHMuc2NzcyIsImdsb2JhbC9fdHlwb2dyYXBoeS5zY3NzIiwiZ3JpZC9fZ3JpZC5zY3NzIiwiZ3JpZC9fc2VjdGlvbi5zY3NzIiwiZ3JpZC9fY29udGFpbmVyLnNjc3MiLCJncmlkL3RlbXBsYXRlcy9fdGVtcGxhdGUtZ2xvYmFsLnNjc3MiLCJncmlkL3RlbXBsYXRlcy9fdGVtcGxhdGUtd2l0aC1vbmUtY29sdW1uLnNjc3MiLCJncmlkL19mbGV4LnNjc3MiLCJoZWxwZXJzL19jb2xvcnMuc2NzcyIsImNvbXBvbmVudHMvX2hhbWJ1cmdlci1tZW51LnNjc3MiLCJjb21wb25lbnRzL19uYXZpZ2F0aW9uLnNjc3MiLCJjb21wb25lbnRzL19idXR0b24uc2NzcyIsImNvbXBvbmVudHMvX2NhcmQuc2NzcyIsImFic3RyYWN0cy9fYm9yZGVyLXJhZGl1cy5zY3NzIiwiY29tcG9uZW50cy9faGVyby5zY3NzIiwibGF5b3V0L19oZWFkZXIuc2NzcyIsImxheW91dC9fZm9vdGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQVEsZ0dBQUE7QUNPUjtFQUNFLDhCQUFBO1VBQUEsc0JBQUE7QUNMRjs7QURRQTs7O0VBR0UsMkJBQUE7VUFBQSxtQkFBQTtBQ0xGOztBRGFDO0VBQ0MsaUJBQUE7RUFBbUIsTUFBQTtFQUNuQiw4QkFBQTtFQUFnQyxNQUFBO0FDUmxDOztBRGFBO0VBQ0UsU0FBQTtBQ1ZGOztBRGdCQTtFQUNFLGNBQUE7QUNiRjs7QURvQkE7RUFDRSwrQkFBQTtVQUFBLHVCQUFBO0VBQXlCLE1BQUE7RUFDekIsU0FBQTtFQUFXLE1BQUE7RUFDWCxpQkFBQTtFQUFtQixNQUFBO0FDZHJCOztBRG9CQTtFQUNFLGlDQUFBO0VBQW1DLE1BQUE7RUFDbkMsY0FBQTtFQUFnQixNQUFB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RXZrQkk7RWdCcEJKO0lBS0ksa0ZBQUE7RWxCMGxCRjtFa0J4bEJFO0lBQ0UsY0FBQTtJQUNBLFdBQUE7RWxCMGxCSjtFa0J2bEJFO0lBQ0UsY0FBQTtJQUNBLFdBQUE7RWxCeWxCSjtFa0J0bEJFO0lBQ0UsY0FBQTtJQUNBLFdBQUE7RWxCd2xCSjtFa0JybEJFO0lBQ0UsY0FBQTtJQUNBLFdBQUE7RWxCdWxCSjtFa0JwbEJFO0lBQ0UsY0FBQTtJQUNBLFdBQUE7RWxCc2xCSjtBQUNGIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9QmUrVmlldG5hbTp3Z2h0QDQwMDs1MDA7NzAwJmRpc3BsYXk9c3dhcCcpO1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIDhwIFN5c3RlbVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuXG4vL1VzZWQgZm9yIFR5cG9ncmFwaHksIExheW91dCwgU3BhY2luZ3MuIEV4cGFuZCBhbmQgY3VzdG9taXplIGFzIG5lZWRlZC5cbiRzaXplLWJhc2U6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW0oMTZweCk7XG5cbiRzaXplLXh4czogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW0oNHB4KTtcbiRzaXplLXhzOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW0oOHB4KTtcbiRzaXplLXM6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW0oMjRweCk7XG4kc2l6ZS1tOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtKDMycHgpO1xuJHNpemUtbDogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbSg0MHB4KTtcbiRzaXplLXhsOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW0oNDhweCk7XG4kc2l6ZS14eGw6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtKDU2cHgpO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVHlwb2dyYXBoeVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy9Gb250LVNpemVzXG4kZm9udC1zaXplLWgxOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYW1wKCN7cmVtKDQwcHgpfSwgI3tcIjEuODkwNnJlbSArIDIuNzA4M3Z3XCJ9LCAje3JlbSg1M3B4KX0pO1xuJGZvbnQtc2l6ZS1oMjogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFtcCgje3JlbSgyOXB4KX0sICN7XCIxLjM5MDZyZW0gKyAxLjg3NTB2d1wifSwgI3tyZW0oMzhweCl9KTtcbiRmb250LXNpemUtaDM6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtKDQycHgpO1xuJGZvbnQtc2l6ZS1oNDogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW0oNDJweCk7XG4kZm9udC1zaXplLWg1OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbSg0MnB4KTtcbiRmb250LXNpemUtaDY6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtKDQycHgpO1xuXG4vL2luYmV0d2VlbiB2YWx1ZXMgY2FsY3VsYXRlZCBmcm9tIGh0dHBzOi8vY29kZXNhbmRib3guaW8vcy9jbGFtcC1saW5lYXItaW50ZXBvbGF0aW9uLWJhc2VkLW9uLXZpZXdwb3J0LXdpZHRoLWJ1aWxkZXIteGdrZnQ/ZnJvbS1lbWJlZFxuXG4kYm9keS1jb3B5OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzaXplLWJhc2U7XG5cbiRib2R5LWNvcHktZm9udC1mYW1pbHk6ICAgICAgICAgICAgICAgICAnQmUgVmlldG5hbScsIHNhbnMtc2VyaWY7XG4kaGVhZGxpbmUtZm9udC1mYW1pbHk6ICAgICAgICAgICAgICAgICAgJGJvZHktY29weS1mb250LWZhbWlseTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIExheW91dFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuJGdyaWQtZ2FwOiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtKDQ1cHgpO1xuJGdyaWQtZ2FwLWRlc2t0b3A6ICAgICAgICAgICAgICAgICAgcmVtKDExN3B4KTsgLy9TZXQgMCBpZiBub25lIGlzIG5lZWRlZFxuXG4kc2lkZWJhci1zaXplOiAgICAgICAgICAgICAgICAgICAgICByZW0oNTQwcHgpO1xuXG5cbiRzZWN0aW9uLWdhcDogICAgICAgICAgICAgICAgICAgICAgIHJlbSgxOXB4KTsgLy9TZXQgMCBpZiBub25lIGlzIG5lZWRlZFxuJHNlY3Rpb24tZ2FwLWRlc2t0b3A6ICAgICAgICAgICAgICAgcmVtKDkxcHgpOyAvL1NldCAwIGlmIG5vbmUgaXMgbmVlZGVkXG5cbi8vY29udGFpbmVyIHNpemVzXG4kY29udGFpbmVyLWlzLXdpZGU6ICAgICAgICAgICAgICAgICAxMTExcHg7IC8vTWF4IGNvbnRhaW5lciBzaXplIG9uIERlc2t0b3BcbiRjb250YWluZXItaXMtc21hbGw6ICAgICAgICAgICAgICAgICA0MzdweDsgLy8gTWF4IGNvbnRhaW5lciBzaXplIHZvbiBUYWJsZXRcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIENvbG9yc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuJHByaW1hcnktY29sb3I6ICAgICAgICAgICAgICAgICAgIGhzbCgxMiwgODglLCA1OSUpO1xuJHByaW1hcnktbGlnaHQtY29sb3I6ICAgICAgICAgICAgIGhzbCgxMywgMTAwJSwgOTYlKTtcbiRzZWNvbmRhcnktY29sb3I6ICAgICAgICAgICAgICAgICBoc2woMjI4LCAzOSUsIDIzJSk7XG4kc2Vjb25kYXJ5LWxpZ2h0LWNvbG9yOiAgICAgICAgICAgaHNsKDAsIDAlLCA5OCUpO1xuXG4kdGV4dC1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgaHNsKDIyNywgMTIlLCA2MSUpO1xuJGhlYWRsaW5lLWNvbG9yOiAgICAgICAgICAgICAgICAgICRzZWNvbmRhcnktY29sb3I7XG5cbiRuYXZpZ2F0aW9uLWxpbmstY29sb3I6ICAgICAgICAgICBoc2woMjMzLCAxMiUsIDEzJSk7IFxuXG4kYmFja2dyb3VuZC1jb2xvcjogICAgICAgICAgICAgICAgI2ZmZmZmZjtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFVJXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4kYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICAgICAgICByZW0oNDRweCk7XG4kbGluZS1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAkYmFja2dyb3VuZC1jb2xvcjtcbiRib3gtc2hhZG93OiAgICAgICAgICAgICAgICAgICAgICAgIDAgMXB4IDNweCAwIHJnYmEoMCwgMCwgMCwgLjEpO1xuXG5cbiRjYXJkLWJhY2tncm91bmQ6ICAgICAgICAgICAgICAgICAgICNmZmZmZmY7IiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIG5vcm1hbGl6ZSAmIHJlc2V0IGJhc2VkIG9uIFxuLy8gZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgfCBNSVQgTGljZW5zZSBcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vQm94LVNpemluZyBvbiBhbGwgRWxlbWVudHNcblxuaHRtbCB7XG4gIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgYm94LXNpemluZzppbmhlcml0O1xufVxuXG5cbi8vIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbi8vIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuIFxuXG4gaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vL1JlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLy8gUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG5cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5cbi8vIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4vLyAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLy8gMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbi8vIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8vIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbi8vIDIuIFJlc2V0IGxpbmtzXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLy8gMSAvL1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IC8vIDIgLy9cbiAgY29sb3I6IGluaGVyaXQ7IC8vIDIgLy9cbn1cblxuLy8gMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbi8vIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuXG4vL1Jlc2V0IEhlYWRsaW5lcy5cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuXG4vLyBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLy8gMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbi8vIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLy9NYWtlIENvZGUgRWxlbWVudHMgcmVjb2duaXplYWJsZSBcbmNvZGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC4yKTtcbiAgcGFkZGluZzogMCA0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn1cblxudWwsIG9sLCBkZCB7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmtiZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2I0YjRiNDtcbiAgYm94LXNoYWRvdzogMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgLjIpLCBcbiAgICAgICAgICAgICAgMCAycHggMCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgLjcpIGluc2V0O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXdlaWdodDogNzAwO1xuICBwYWRkaW5nOiAycHggNHB4O1xufVxuXG4vLyBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLy8gUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4vLyBhbGwgYnJvd3NlcnMuXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8vIDEuIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4vLyAyLiBUcmVhdCBpbWFnZXMgbGlrZSBibG9jayBlbGVtZW50cyB0byBwcmV2ZW50IHNwYWNlIFxuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IC8vIDEgLy9cbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgLy8gMiAvL1xuICB3aWR0aDogMTAwJTtcbn1cblxuLy8gUmVtb3ZlIE1hcmdpblxuXG5maWd1cmUsXG5wLFxudWwsIG9sLCBkZCB7XG4gIG1hcmdpbjogMDtcbn1cblxuXG5cbi8vIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuLy8gMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDsgLy8gMSAvL1xuICBmb250LXNpemU6IDEwMCU7IC8vIDEgLy9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8vIDEgLy9cbiAgbWFyZ2luOiAwOyAvLyAyIC8vXG59XG5cbmJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IG5vbmU7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi8vIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuLy8gMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vLyBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbi8vIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLy8gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLy8gUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8vIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8vIFJlbW92ZSB1bndhbnRlZCBzcGFjaW5nIGFuZCBib3JkZXJcblxuZmllbGRzZXQge1xuICBwYWRkaW5nOjA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyLXdpZHRoOiAwO1xufVxuXG4vLyAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuLy8gMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuLy8gMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuLy8gICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vLyBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLy8gUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8vTWFrZSBsYWJlbHMgYmxvY2tlbGVtZW50c1xubGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLy8gMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4vLyAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8vIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLy8gMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4vLyAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vLyBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vLyAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuLy8gMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vL0hvdmVyIFN0YXR1cyBmb3IgSW5wdXQgVHlwZXNcblt0eXBlPVwic3VibWl0XCJdLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4vL1JlbW92ZSBQb2ludGVyIGZyb20gZGlzYWJsZWQgYnV0dG9uIHR5cGVzXG4qOmRpc2FibGVkIHtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cblxuYnV0dG9uOmRpc2FibGVkIHtcbiAgY29sb3I6IHJnYmEoMTYsIDE2LCAxNiwgLjMpO1xufVxuXG4vLyBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8vIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLy8gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8vIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8vY29ycmVjdCB0ZXh0LWFsaWduIFxudGgge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuIiwiQGltcG9ydCB1cmwoXCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUJlK1ZpZXRuYW06d2dodEA0MDA7NTAwOzcwMCZkaXNwbGF5PXN3YXBcIik7XG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xufVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovXG59XG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqL1xufVxuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi9cbn1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovXG59XG5cbmNvZGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIHBhZGRpbmc6IDAgNHB4O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbnVsLCBvbCwgZGQge1xuICBwYWRkaW5nOiAwO1xufVxuXG5rYmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNiNGI0YjQ7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMnB4IDAgMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNykgaW5zZXQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHBhZGRpbmc6IDJweCA0cHg7XG59XG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbmZpZ3VyZSxcbnAsXG51bCwgb2wsIGRkIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgbWFyZ2luOiAwO1xufVxuXG5idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbmJ1dHRvbixcblt0eXBlPWJ1dHRvbl0sXG5bdHlwZT1yZXNldF0sXG5bdHlwZT1zdWJtaXRdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPWJ1dHRvbl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1yZXNldF06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1zdWJtaXRdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1idXR0b25dOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9cmVzZXRdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9c3VibWl0XTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlci13aWR0aDogMDtcbn1cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovXG59XG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5bdHlwZT1jaGVja2JveF0sXG5bdHlwZT1yYWRpb10ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbn1cblxuW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cblt0eXBlPXNlYXJjaF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqL1xufVxuXG5bdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xufVxuXG5bdHlwZT1zdWJtaXRdLFxuW3R5cGU9YnV0dG9uXSxcblt0eXBlPXJlc2V0XSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuKjpkaXNhYmxlZCB7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG59XG5cbmJ1dHRvbjpkaXNhYmxlZCB7XG4gIGNvbG9yOiByZ2JhKDE2LCAxNiwgMTYsIDAuMyk7XG59XG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbnRoIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuYm9keSB7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLnBpbGwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ucGlsbDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogLTE7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9iZy10YWJsZXQtcGF0dGVybi5zdmdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTglLCAtMjQlKTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnBpbGw6YWZ0ZXIge1xuICAgIGhlaWdodDogNTAuODc1cmVtO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDU1JSwgLTUwJSk7XG4gIH1cbn1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBcIkJlIFZpZXRuYW1cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIGJvZHkge1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS42O1xuICB9XG59XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDUsIHAge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDUsIHAge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbn1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGNvbG9yOiAjMjQyZDUyO1xufVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogY2xhbXAoMi41cmVtLCAxLjg5MDZyZW0gKyAyLjcwODN2dywgMy4zMTI1cmVtKTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0xcHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgaDEge1xuICAgIGxldHRlci1zcGFjaW5nOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07XG4gIH1cbn1cblxuaDIge1xuICBmb250LXNpemU6IGNsYW1wKDEuODEyNXJlbSwgMS4zOTA2cmVtICsgMS44NzUwdncsIDIuMzc1cmVtKTtcbiAgbGluZS1oZWlnaHQ6IDEuNTU7XG4gIG1hcmdpbi1ib3R0b206IDAuNzVyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIGgyIHtcbiAgICBsaW5lLWhlaWdodDogMS4xNTtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4zcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMS45Mzc1cmVtO1xuICB9XG59XG5cbmgzIHtcbiAgZm9udC1zaXplOiAyLjYyNXJlbTtcbn1cblxucCB7XG4gIG1heC13aWR0aDogMjAuODEyNXJlbTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTI4MHB4KSB7XG4gIHAge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICB9XG59XG5cbi5pbnRybyB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNzU7XG4gIG1hcmdpbi1ib3R0b206IDEuODEyNXJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmludHJvIHtcbiAgICBsaW5lLWhlaWdodDogMS42NTtcbiAgICBtYXJnaW4tYm90dG9tOiAyLjVyZW07XG4gIH1cbn1cblxuLmhhcy1ncmlkIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ2FwOiAxOXB4O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuaGFzLWdyaWQge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogbWlubWF4KGF1dG8sIDQzNnB4KSBtaW5tYXgoYXV0bywgNTQwcHgpO1xuICAgIGdhcDogNy4zMTI1cmVtO1xuICB9XG59XG5cbi5zZWN0aW9uIHtcbiAgcGFkZGluZzogMS4xODc1cmVtIDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5zZWN0aW9uIHtcbiAgICBwYWRkaW5nOiA1LjY4NzVyZW0gMDtcbiAgfVxufVxuXG4ud2l0aC1sYXJnZS1jb250YWluZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi53aXRoLWxhcmdlLWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMjcuMzEyNXJlbTtcbiAgcGFkZGluZzogMCAxcmVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAud2l0aC1sYXJnZS1jb250YWluZXIge1xuICAgIG1heC13aWR0aDogNjkuNDM3NXJlbTtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG59XG5cbi50ZW1wbGF0ZS13aXRoLW9uZS1jb2x1bW4ge1xuICBkaXNwbGF5OiBncmlkO1xufVxuXG4udGVtcGxhdGUtd2l0aC1vbmUtY29sdW1uIHtcbiAgZ3JpZC1nYXA6IDIuODEyNXJlbTtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBbbmF2XSBhdXRvIFttYWluXSBhdXRvIFtmb290ZXJdIGF1dG87XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTI4MHB4KSB7XG4gIC50ZW1wbGF0ZS13aXRoLW9uZS1jb2x1bW4ge1xuICAgIGdyaWQtZ2FwOiA3LjMxMjVyZW07XG4gIH1cbn1cblxuLmhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5oYXMtYmFja2dyb3VuZC1jb2xvciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ5LCAxOTAsIDIxNCwgMC41KTtcbn1cblxuLmhhbWJ1cmdlci1tZW51IHtcbiAgd2lkdGg6IDFyZW07XG4gIHotaW5kZXg6IDUwMDtcbn1cbi5oYW1idXJnZXItbWVudTpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5oYW1idXJnZXItbWVudSA+IHNwYW4ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyNDJkNTI7XG4gIHdpZHRoOiAyNXB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbn1cbi5oYW1idXJnZXItbWVudSA+IHNwYW46bm90KDpsYXN0LW9mLXR5cGUpIHtcbiAgbWFyZ2luLWJvdHRvbTogM3B4O1xufVxuLmhhbWJ1cmdlci1tZW51LmlzLS1vcGVuIHNwYW46bnRoLWNoaWxkKDEpIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3AgbGVmdDtcbiAgd2lkdGg6IDI3cHg7XG59XG4uaGFtYnVyZ2VyLW1lbnUuaXMtLW9wZW4gc3BhbjpudGgtY2hpbGQoMikge1xuICBvcGFjaXR5OiAwO1xuICB3aWR0aDogMDtcbn1cbi5oYW1idXJnZXItbWVudS5pcy0tb3BlbiBzcGFuOm50aC1jaGlsZCgzKSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBsZWZ0O1xuICB3aWR0aDogMjdweDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMjgwcHgpIHtcbiAgLmhhbWJ1cmdlci1tZW51IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5uYXZpZ2F0aW9uIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMjgwcHgpIHtcbiAgLm5hdmlnYXRpb24ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gIH1cbn1cbi5uYXZpZ2F0aW9uX19saW5rIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlLWluLW91dDtcbn1cbi5uYXZpZ2F0aW9uX19saW5rOm5vdCg6bGFzdC1vZi10eXBlKSB7XG4gIG1hcmdpbi1yaWdodDogMnJlbTtcbn1cbi5uYXZpZ2F0aW9uX19saW5rOmhvdmVyIHtcbiAgY29sb3I6ICM5MDk1YTc7XG59XG4ubmF2aWdhdGlvbl9fYnV0dG9uIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMjgwcHgpIHtcbiAgLm5hdmlnYXRpb25fX2J1dHRvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cblxuLmJ1dHRvbiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDIuNzVyZW07XG4gIGJvcmRlcjogbm9uZTtcbiAgZm9udDogNDAwIDAuODEyNXJlbSBcIkJlIFZpZXRuYW1cIiwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgd2lkdGg6IDguNXJlbTtcbiAgaGVpZ2h0OiAyLjc1cmVtO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbn1cbi5idXR0b24tLXByaW1hcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjI1ZjNhO1xuICBjb2xvcjogI2ZmZWZlYjtcbiAgYm9yZGVyOiAxcHggc29saWQgI0Q5NkE0RTtcbiAgYm94LXNoYWRvdzogMCA4cHggMTVweCAwIHJnYmEoMjQyLCA5NSwgNTgsIDAuMik7XG59XG4uYnV0dG9uLS1wcmltYXJ5OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZDOEU3NztcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gIGJveC1zaGFkb3c6IDAgOHB4IDE1cHggMCByZ2JhKDI1NSwgMjM5LCAyMzUsIDAuMik7XG59XG4uYnV0dG9uLS1zZWNvbmRhcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBjb2xvcjogI2YyNWYzYTtcbn1cbi5idXR0b24tLXNlY29uZGFyeTpob3ZlciB7XG4gIGNvbG9yOiAjZmZlZmViO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbn1cblxuLmNhcmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXItcmFkaXVzOiAwLjE3MTg3NXJlbTtcbiAgYm94LXNoYWRvdzogMCAxcHggM3B4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmZmZmO1xuICBwYWRkaW5nOiAycmVtO1xufVxuLmNhcmQtLWhlaWdodCB7XG4gIGhlaWdodDogNDEuMTI1cmVtO1xufVxuXG4uaGVybyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5oZXJvX19pbGx1c3RyYXRpb24ge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oZXJvX19pbGx1c3RyYXRpb24ge1xuICAgIG1heC1oZWlnaHQ6IDMxLjI1cmVtO1xuICAgIGdyaWQtY29sdW1uOiAyO1xuICAgIGdyaWQtcm93OiAxO1xuICB9XG59XG4uaGVyb19fdGV4dCB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbn1cbi5oZXJvX19idXR0b24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oZXJvX19idXR0b24ge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICB9XG59XG4uaGVyby5zZWN0aW9uIHtcbiAgcGFkZGluZy10b3A6IDA7XG59XG5cbi5oZWFkZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDIuNXJlbTtcbiAgcGFkZGluZzogMCAxLjVyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIG1hcmdpbi10b3A6IDQuNXJlbTtcbiAgICBwYWRkaW5nOiAwIDEuNXJlbSAwIDA7XG4gIH1cbn1cbi5oZWFkZXJfX2xvZ28ge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA2LjgxMjVyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXJfX2xvZ28ge1xuICAgIG1heC13aWR0aDogOS4xMjVyZW07XG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gIH1cbn1cblxuLmZvb3RlciB7XG4gIGRpc3BsYXk6IGdyaWQ7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5mb290ZXIge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogbWlubWF4KGF1dG8sIDE2NXB4KSBtaW5tYXgoYXV0bywgMzg4cHgpIG1pbm1heChhdXRvLCAzMThweCk7XG4gIH1cbiAgLmZvb3Rlcl9fbmV3c2xldHRlciB7XG4gICAgZ3JpZC1jb2x1bW46IDM7XG4gICAgZ3JpZC1yb3c6IDE7XG4gIH1cbiAgLmZvb3Rlcl9fbGlua3Mge1xuICAgIGdyaWQtY29sdW1uOiAyO1xuICAgIGdyaWQtcm93OiAxO1xuICB9XG4gIC5mb290ZXJfX3NvY2lhbCB7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1yb3c6IDI7XG4gIH1cbiAgLmZvb3Rlcl9fbG9nbyB7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1yb3c6IDE7XG4gIH1cbiAgLmZvb3Rlcl9fY29weXJpZ2h0IHtcbiAgICBncmlkLWNvbHVtbjogMztcbiAgICBncmlkLXJvdzogMjtcbiAgfVxufSIsImJvZHkge1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG59XG5cbi5waWxsIHtcblxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IC0xO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltYWdlcy9iZy10YWJsZXQtcGF0dGVybi5zdmcnKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTglLCAtMjQlKTtcblxuICAgIC8vIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IC0zMHZ3IHRvcCAtMTB2dztcbiAgICAvLyBiYWNrZ3JvdW5kLXNpemU6IDEyMCU7XG4gIFxuICAgIC8vIEBpbmNsdWRlIGNoYW5nZS1hdCgnbW9iaWxlJykge1xuICAgIC8vICAgYmFja2dyb3VuZC1zaXplOiA5MyU7XG4gICAgLy8gICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodCAtMTh2dyB0b3AgLTMxdnc7XG4gICAgLy8gfVxuICBcbiAgICBAaW5jbHVkZSBjaGFuZ2UtYXQoJ3RhYmxldCcpIHtcbiAgICAgIGhlaWdodDogcmVtKDgxNHB4KTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDU1JSwgLTUwJSk7XG4gICAgfVxuICB9XG4gIFxufVxuIiwiJGJyZWFrcG9pbnRzOiAoXG4gICdtb2JpbGUnOiAoXG4gICAgbWluLXdpZHRoOiA2NDBweCxcbiAgKSxcbiAgJ3RhYmxldCc6IChcbiAgICBtaW4td2lkdGg6IDEwMjRweCxcbiAgKSxcbiAgJ2Rlc2t0b3AnOiAoXG4gICAgbWluLXdpZHRoOiAxMjgwcHgsXG4gICksXG4pICFkZWZhdWx0O1xuXG4vLy8gTWl4aW4gdG8gbWFuYWdlIHJlc3BvbnNpdmUgYnJlYWtwb2ludHNcbi8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcbi8vLyBAcGFyYW0ge1N0cmluZ30gJGJyZWFrcG9pbnQgLSBCcmVha3BvaW50IG5hbWVcbi8vLyBAcmVxdWlyZSAkYnJlYWtwb2ludHNcbkBtaXhpbiBjaGFuZ2UtYXQoJGJyZWFrcG9pbnQpIHtcbiAgLy8gSWYgdGhlIGtleSBleGlzdHMgaW4gdGhlIG1hcFxuICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludCkge1xuICAgIC8vIFByaW50cyBhIG1lZGlhIHF1ZXJ5IGJhc2VkIG9uIHRoZSB2YWx1ZVxuICAgIEBtZWRpYSAje2luc3BlY3QobWFwLWdldCgkYnJlYWtwb2ludHMsICRicmVha3BvaW50KSl9IHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuXG4gIC8vIElmIHRoZSBrZXkgZG9lc24ndCBleGlzdCBpbiB0aGUgbWFwXG4gIEBlbHNlIHtcbiAgICBAd2FybiBcIlVuZm9ydHVuYXRlbHksIG5vIHZhbHVlIGNvdWxkIGJlIHJldHJpZXZlZCBmcm9tIGAjeyRicmVha3BvaW50fWAuIFwiXG4gICAgICAgICsgXCJBdmFpbGFibGUgYnJlYWtwb2ludHMgYXJlOiAje21hcC1rZXlzKCRicmVha3BvaW50cyl9LlwiO1xuICB9XG59XG4iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBUeXBvZ3JhcGh5XHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5ib2R5IHtcclxuICBmb250LWZhbWlseTogJGJvZHktY29weS1mb250LWZhbWlseTtcclxuICBmb250LXNpemU6IHJlbSgxNHB4KTtcclxuICBsaW5lLWhlaWdodDogMjtcclxuXHJcbiAgQGluY2x1ZGUgY2hhbmdlLWF0KCd0YWJsZXQnKSB7XHJcbiAgICBmb250LXNpemU6ICRib2R5LWNvcHk7XHJcbiAgICBsaW5lLWhlaWdodDogMS42O1xyXG4gIH1cclxufVxyXG5cclxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNSwgcCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICBAaW5jbHVkZSBjaGFuZ2UtYXQoJ3RhYmxldCcpIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgfVxyXG59XHJcblxyXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg1IHtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGNvbG9yOiAkaGVhZGxpbmUtY29sb3I7XHJcbn1cclxuXHJcbmgxIHtcclxuICBmb250LXNpemU6ICRmb250LXNpemUtaDE7XHJcbiAgbGV0dGVyLXNwYWNpbmc6IC0xcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICBtYXJnaW4tYm90dG9tOiByZW0oOCk7XHJcblxyXG4gIEBpbmNsdWRlIGNoYW5nZS1hdCgndGFibGV0Jykge1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDA7XHJcbiAgICBtYXJnaW4tYm90dG9tOiByZW0oMzIpO1xyXG4gIH1cclxufVxyXG5cclxuaDIge1xyXG4gIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1oMjtcclxuICBsaW5lLWhlaWdodDogMS41NTtcclxuICBtYXJnaW4tYm90dG9tOiByZW0oMTJweCk7XHJcblxyXG4gIEBpbmNsdWRlIGNoYW5nZS1hdCgndGFibGV0Jyl7XHJcbiAgICBsaW5lLWhlaWdodDogMS4xNTtcclxuICAgIGxldHRlci1zcGFjaW5nOiAuM3B4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogcmVtKDMxcHgpO1xyXG4gIH1cclxufVxyXG5cclxuaDMge1xyXG4gIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1oMztcclxufVxyXG5cclxucCB7XHJcbiAgbWF4LXdpZHRoOiByZW0oMzMzKTtcclxuICBtYXJnaW46IDAgYXV0bztcclxuXHJcbiAgQGluY2x1ZGUgY2hhbmdlLWF0KCdkZXNrdG9wJykge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDA7XHJcbiAgfVxyXG59XHJcblxyXG4uaW50cm8ge1xyXG4gIGZvbnQtc2l6ZTogJGJvZHktY29weTtcclxuICBsaW5lLWhlaWdodDogMS43NTtcclxuICBtYXJnaW4tYm90dG9tOiByZW0oMjkpO1xyXG5cclxuICBAaW5jbHVkZSBjaGFuZ2UtYXQoJ3RhYmxldCcpe1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNjU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiByZW0oNDApO1xyXG4gIH1cclxufSIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vL1xuLy8gQ3JlYXRlICYgVXNlIEdyaWRcbi8vXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4uaGFzLWdyaWQge1xuICBkaXNwbGF5OiBncmlkO1xuICBnYXA6IDE5cHg7XG4gIC8vZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgkc2lkZWJhci1zaXplLCAxZnIpKTtcbiAgXG4gIEBpbmNsdWRlIGNoYW5nZS1hdCgndGFibGV0Jykge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogbWlubWF4KGF1dG8sIDQzNnB4KSBtaW5tYXgoYXV0bywgNTQwcHgpO1xuICAgIGdhcDogJGdyaWQtZ2FwLWRlc2t0b3A7XG4gIH1cbn1cbiIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vL1xuLy8gSGFuZGxlIHNlY3Rpb24gZ2FwcyBmb3IgbW9iaWxlIGFuZCBkZXNrdG9wXG4vL1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuQG1peGluIHNlY3Rpb24tZ2FwIHtcbiAgcGFkZGluZzogJHNlY3Rpb24tZ2FwO1xufVxuXG4uc2VjdGlvbiB7XG5cbiAgQGlmICRzZWN0aW9uLWdhcCB7XG4gICAgcGFkZGluZzogJHNlY3Rpb24tZ2FwIDA7XG5cbiAgICBAaW5jbHVkZSBjaGFuZ2UtYXQoJ3RhYmxldCcpIHtcbiAgICAgIHBhZGRpbmc6ICRzZWN0aW9uLWdhcC1kZXNrdG9wIDA7XG4gICAgfVxuICB9XG59IiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vXG4vLyBDb250YWluZXIgU2l6ZXNcbi8vXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4lY29udGFpbmVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ud2l0aC1sYXJnZS1jb250YWluZXIge1xuICBAZXh0ZW5kICVjb250YWluZXI7XG4gIG1heC13aWR0aDogcmVtKCRjb250YWluZXItaXMtc21hbGwpO1xuICBwYWRkaW5nOiAwIHJlbSgxNik7XG5cbiAgQGluY2x1ZGUgY2hhbmdlLWF0KCd0YWJsZXQnKSB7XG4gICAgbWF4LXdpZHRoOiByZW0oJGNvbnRhaW5lci1pcy13aWRlKTtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG59XG4iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy9cbi8vIEhhbmRsZSBvdmVyYWxsIFRlbXBsYXRlIFBhcnRzXG4vLyBSZW1vdmUgdW5uZWRlZCBQYXJ0c1xuLy9cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiVncmlkIHtcbiAgZGlzcGxheTogZ3JpZDtcbn1cblxuQG1peGluIGdyaWQtZ2FwIHtcbiAgZ3JpZC1nYXA6ICRncmlkLWdhcDtcblxuICBAaW5jbHVkZSBjaGFuZ2UtYXQoJ2Rlc2t0b3AnKSB7XG4gICAgZ3JpZC1nYXA6ICRncmlkLWdhcC1kZXNrdG9wO1xuICB9XG59IiwiQGltcG9ydCAndGVtcGxhdGUtZ2xvYmFsJztcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vL1xuLy8gSGFuZGxlIFRlbXBsYXRlIHdpdGggb25lIGNvbHVtblxuLy9cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vR2VuZXJhdGUgVGVtcGxhdGVcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5AbWl4aW4gdGVtcGxhdGUtd2l0aC1vbmUtY29sdW1uIHtcbiAgQGV4dGVuZCAlZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBbbmF2XSBhdXRvIFttYWluXSBhdXRvIFtmb290ZXJdIGF1dG87XG59XG5cbi8vSGVscGVyIENsYXNzZXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4udGVtcGxhdGUtd2l0aC1vbmUtY29sdW1ue1xuICBAaW5jbHVkZSBncmlkLWdhcCgpO1xuICBAaW5jbHVkZSB0ZW1wbGF0ZS13aXRoLW9uZS1jb2x1bW4oKTtcbn0iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBGbGV4Ym94IE1peGluc1xyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuJWRpc3BsYXktZmxleCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuQG1peGluIGZsZXhib3gtc3BhY2UtYmV0d2Vlbi1jZW50ZXIge1xyXG4gIEBleHRlbmQgJWRpc3BsYXktZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuQG1peGluIGZsZXhib3gtc3BhY2UtYmV0d2Vlbi1iYXNlbGluZSB7XHJcbiAgQGV4dGVuZCAlZGlzcGxheS1mbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59IiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vXG4vLyBjb2xvciBoZWxwZXIgY2xhc3Nlc1xuLy9cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cblxuLmhhcy1iYWNrZ3JvdW5kLWNvbG9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogaHNsYSgzMzUsIDgyJSwgODYlLCAuNSk7O1xufSIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIEFuaW1hdGVkIEhhbWJ1cmdlck1lbnVcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbi5oYW1idXJnZXItbWVudSB7XHJcbiAgd2lkdGg6IHJlbSgxNik7XHJcbiAgei1pbmRleDogNTAwO1xyXG5cclxuICAmOmhvdmVyIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcblxyXG4gID4gc3BhbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGhlaWdodDogNHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgIHdpZHRoOiAyNXB4O1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlLWluLW91dDtcclxuXHJcbiAgICAmOm5vdCg6bGFzdC1vZi10eXBlKSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDNweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICYuaXMtLW9wZW4ge1xyXG4gICAgc3BhbjpudGgtY2hpbGQoMSkge1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46dG9wIGxlZnQ7XHJcbiAgICAgIHdpZHRoOiAyN3B4O1xyXG4gICAgfVxyXG4gIFxyXG4gICAgc3BhbjpudGgtY2hpbGQoMikge1xyXG4gICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICB3aWR0aDogMDtcclxuICAgIH1cclxuICBcclxuICAgIHNwYW46bnRoLWNoaWxkKDMpIHtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcclxuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogYm90dG9tIGxlZnQ7XHJcbiAgICAgIHdpZHRoOiAyN3B4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQGluY2x1ZGUgY2hhbmdlLWF0KCdkZXNrdG9wJykge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbn0iLCIubmF2aWdhdGlvbiB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuXHJcbiAgQGluY2x1ZGUgY2hhbmdlLWF0KCdkZXNrdG9wJykge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICB9XHJcblxyXG4gICZfX2xpbmt7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgJjpub3QoOmxhc3Qtb2YtdHlwZSkge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6ICRzaXplLW07XHJcbiAgICB9XHJcblxyXG4gICAgdHJhbnNpdGlvbjogY29sb3IgLjNzIGVhc2UtaW4tb3V0O1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICBjb2xvcjogJHRleHQtY29sb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19idXR0b24ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuXHJcbiAgICBAaW5jbHVkZSBjaGFuZ2UtYXQoJ2Rlc2t0b3AnKSB7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG4gIH1cclxufSIsIi5idXR0b24ge1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XHJcbiAgYm9yZGVyOm5vbmU7XHJcbiAgZm9udDogNDAwIHJlbSgxMykgJGJvZHktY29weS1mb250LWZhbWlseTtcclxuICBsaW5lLWhlaWdodDogMS4yO1xyXG4gIHdpZHRoOiByZW0oMTM2KTtcclxuICBoZWlnaHQ6IHJlbSg0NHB4KTtcclxuICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2UtaW4tb3V0O1xyXG5cclxuICAmLS1wcmltYXJ5IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgY29sb3I6ICRwcmltYXJ5LWxpZ2h0LWNvbG9yO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI0Q5NkE0RTtcclxuICAgIGJveC1zaGFkb3c6IDAgOHB4IDE1cHggMCByZ2JhKCRwcmltYXJ5LWNvbG9yLCAuMik7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGQzhFNzc7XHJcbiAgICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZS1pbi1vdXQ7XHJcbiAgICAgIGJveC1zaGFkb3c6IDAgOHB4IDE1cHggMCByZ2JhKCRwcmltYXJ5LWxpZ2h0LWNvbG9yLCAuMik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLS1zZWNvbmRhcnkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgY29sb3I6ICRwcmltYXJ5LWxpZ2h0LWNvbG9yO1xyXG4gICAgICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2UtaW4tb3V0O1xyXG4gICAgfVxyXG4gIH1cclxufSIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vL1xuLy8gQ2FyZHNcbi8vXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4uY2FyZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRjYXJkLWJhY2tncm91bmQ7XG4gIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMoKTtcbiAgYm94LXNoYWRvdzogJGJveC1zaGFkb3c7XG4gIGJvcmRlcjogMXB4IHNvbGlkICRsaW5lLWNvbG9yO1xuICBwYWRkaW5nOiAkc2l6ZS1tO1xuXG4gICYtLWhlaWdodCB7XG4gICAgaGVpZ2h0OiByZW0oNjU4cHgpO1xuICB9XG59IiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEJvcmRlciBSYWRpdXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbkBtaXhpbiBib3JkZXItcmFkaXVzKCRyYWRpdXM6ICRib3JkZXItcmFkaXVzKSB7XG4gIGJvcmRlci1yYWRpdXM6IHJlbSgkcmFkaXVzKTtcbn0iLCIuaGVybyB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIFxyXG5cclxuICAmX19pbGx1c3RyYXRpb24ge1xyXG5cclxuXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIC8vbWF4LWhlaWdodDogcmVtKDI4NXB4KTtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBjaGFuZ2UtYXQoJ3RhYmxldCcpIHtcclxuICAgICAgbWF4LWhlaWdodDogcmVtKDUwMCk7XHJcbiAgICAgIGdyaWQtY29sdW1uOiAyO1xyXG4gICAgICBncmlkLXJvdzogMTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX3RleHQge1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgJl9fYnV0dG9uIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcblxyXG4gICAgQGluY2x1ZGUgY2hhbmdlLWF0KCd0YWJsZXQnKSB7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi5zZWN0aW9uIHtcclxuICAgIHBhZGRpbmctdG9wOiAwO1xyXG4gIH1cclxufSIsIi5oZWFkZXIge1xyXG4gIEBpbmNsdWRlIGZsZXhib3gtc3BhY2UtYmV0d2Vlbi1iYXNlbGluZTtcclxuICBtYXJnaW4tdG9wOiByZW0oNDBweCk7XHJcbiAgcGFkZGluZzogMCByZW0oMjQpO1xyXG5cclxuICBAaW5jbHVkZSBjaGFuZ2UtYXQoJ3RhYmxldCcpIHtcclxuICAgIG1hcmdpbi10b3A6IHJlbSg3MnB4KTtcclxuICAgIHBhZGRpbmc6IDAgcmVtKDI0KSAwIDA7XHJcbiAgfVxyXG5cclxuICAmX19sb2dve1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IHJlbSgxMDkpO1xyXG5cclxuICAgIEBpbmNsdWRlIGNoYW5nZS1hdCgndGFibGV0Jykge1xyXG4gICAgICBtYXgtd2lkdGg6IHJlbSgxNDZweCk7XHJcbiAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgfVxyXG4gIH1cclxufSIsIi5mb290ZXIge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcblxyXG4gIFxyXG4gIEBpbmNsdWRlIGNoYW5nZS1hdCgndGFibGV0Jykge1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBtaW5tYXgoYXV0bywgMTY1cHgpIG1pbm1heChhdXRvLCAzODhweCkgbWlubWF4KGF1dG8sIDMxOHB4KTtcclxuXHJcbiAgICAmX19uZXdzbGV0dGVyIHtcclxuICAgICAgZ3JpZC1jb2x1bW46IDM7XHJcbiAgICAgIGdyaWQtcm93OiAxO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgJl9fbGlua3Mge1xyXG4gICAgICBncmlkLWNvbHVtbjogMjtcclxuICAgICAgZ3JpZC1yb3c6IDE7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAmX19zb2NpYWwge1xyXG4gICAgICBncmlkLWNvbHVtbjogMTtcclxuICAgICAgZ3JpZC1yb3c6IDI7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAmX19sb2dvIHtcclxuICAgICAgZ3JpZC1jb2x1bW46IDE7XHJcbiAgICAgIGdyaWQtcm93OiAxO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgJl9fY29weXJpZ2h0IHtcclxuICAgICAgZ3JpZC1jb2x1bW46IDM7XHJcbiAgICAgIGdyaWQtcm93OiAyO1xyXG4gICAgfVxyXG4gIH1cclxufSJdfQ== */
